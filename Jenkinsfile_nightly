#!groovy

properties([
        pipelineTriggers([cron('H 08 * * 1-5')]),
        //A build parameter TEST_TYPE is used to tell the script to use the pipeline simulation configuration
        parameters([
                choice(name: 'TEST_TYPE', choices: 'pipeline', description: 'Test type (must be \'pipeline\' for Jenkins use)')
        ])
])

@Library("Infrastructure")

def product = "ia"
def component = "aip-frontend"

withNightlyPipeline("java", product, component) {

    afterAlways('checkout') {
        sh """ git submodule update --init --recursive"""
    }
    enablePerformanceTest(timeout=30, perfGatlingAlerts=true, perfRerunOnFail=true)

    after('performanceTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }

}
